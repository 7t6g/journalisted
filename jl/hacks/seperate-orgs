#!/usr/bin/env python
#
# merge journo_other_articles into articles
# and create appropriate organisation entries
#

import sys
import string
from datetime import datetime
from optparse import OptionParser
import urlparse

import site
site.addsitedir("../pylib")
from JL import DB

__options = None
_conn = None


def resolve_org( name, domain=None ):
    n = name.lower().strip().encode( 'utf-8' )

    c = _conn.cursor()
    if domain is not None:
        d = domain.encode('utf-8')
        assert( domain == domain.lower().strip() )

        c.execute( "SELECT org_id FROM org_domain WHERE domain=%s", d )
        matched_domain = [ row['org_id'] for row in c.fetchall() ]

    c.execute( "SELECT org_id FROM org_alias WHERE alias=%s", n )
    matched_name = [ row['org_id'] for row in c.fetchall() ]


    print "domain: ", matched_domain
    print "name: ", matched_name



def go():
    c = _conn.cursor()

    c.execute( """SELECT * FROM journo_other_articles WHERE status='a'""" )
    while 1:
        row = c.fetchone()
        if row is None:
            break

        oart = {}
        for f in ('id','journo_id','url','title','publication','pubdate','status' ):
            if f in ('title','publication' ):
                oart[f] = row[f].decode('utf-8')
            else:
                oart[f] = row[f]

        o = urlparse.urlparse(row['url'])
        domain = o[1]

        print domain
#        process( oart )







def main():
    global _options,_conn

    parser = OptionParser()
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose", help="output more (by default, only suspect stuff of output)")
    (_options, args) = parser.parse_args()
    _conn = DB.Connect()
#    go()

    resolve_org( name=args[0], domain=args[1] )

if __name__ == "__main__":
    main()

