#!/usr/bin/env python


import sys
import xapian
import string
from datetime import datetime,timedelta
from optparse import OptionParser
import simplejson as json

import site
site.addsitedir("../pylib")
from JL import DB,ukmedia

import mysociety.config
mysociety.config.set_file("../conf/general")


_xapdb = None

# TODO: factor out xapian stuff into module

XAP_PUBDATETIME_ID = 0      # "YYYYMMDDHHMMSS"
XAP_PUBDATE_ID = 1          # "YYYYMMDD"



def daterange(start_date, end_date):
    for n in range((end_date - start_date).days):
        yield start_date + timedelta(n)



def open_xapdb():
    global _xapdb

    xapdbpath = mysociety.config.get('JL_XAPDB')
    _xapdb = xapian.Database( xapdbpath )


def count_query( query, start_date=None, end_date=None ):
    global _xapdb

    # Start an enquire session.
    enquire = xapian.Enquire( _xapdb )

    # sigh... keep all this in sync with ../phplb/xap.php

    # Parse the query string to produce a Xapian::Query object.
    qp = xapian.QueryParser()
    stemmer = xapian.Stem("english")
    qp.set_stemmer( stemmer )
    qp.set_database( _xapdb )

    qp.set_stemming_strategy(xapian.QueryParser.STEM_SOME)
    qp.set_default_op( xapian.Query.OP_AND )
    # allow date ranges in queries
    # dates follow this format: "YYYYMMDD"
#    r = xapian.DateValueRangeProcessor( XAP_PUBDATE_ID )
#    qp.add_valuerangeprocessor( r );

    qp.add_prefix( 'author', 'A' );
    qp.add_prefix( 'title', 'T' );
    qp.add_prefix( 'journo', 'J' );

    query = qp.parse_query( query )

    if start_date is not None:
        if end_date is None:
            end_date=start_date
        rq = xapian.Query( xapian.Query.OP_VALUE_RANGE, XAP_PUBDATE_ID, start_date.strftime('%Y%m%d'), end_date.strftime('%Y%m%d') )
        query = xapian.Query( xapian.Query.OP_FILTER, query, rq )

#    print "Parsed query is: %s" % str(query)

    # Find the top 10 results for the query.
    enquire.set_query(query)
 
    matches = enquire.get_mset(0, _xapdb.get_doccount() )
    return matches.size()


def main():
    parser = OptionParser()
    (options, args) = parser.parse_args()

    open_xapdb()

    start_date = datetime( 2010,1,1 )
    end_date = datetime( 2010,5,10 )

    queries = [
        ('d_gordon_brown',u'Gordon Brown'),
        ('d_david_cameron',u'David Cameron'),
        ('d_nick_clegg', u'Nick Clegg'),
        ('d_ieuan_wyn_jones', u'Ieuan Wyn Jones'),
        ('d_alex_salmond',u'Alex Salmond'),
        ('d_nick_griffin', u'Nick Griffin'),
        ('d_nigel_farage', u'Nigel Farage'),
        ('d_caroline_lucas', u'Caroline Lucas')
    ]

    results = []
    for d in daterange( start_date, end_date ):
        cnts = []
        for (name,q) in queries:
            cnts.append( count_query( q, d ) )

        results.append( (d,cnts) )

    # output the results as a csv
    print "day," + ','.join( [name for (name,q) in queries] )

    for (d,cnts) in results:
        print d.strftime('%Y-%m-%d') + "," + ','.join( [str(c) for c in cnts] )

if __name__ == "__main__":
    main()




