#!/usr/bin/env python
'''
Interactive tool for approving journalist bios found in the database.
'''

import sys
import textwrap
import re
sys.path.insert(0, '../pylib/JL')
import DB

conn = None

def new_cursor():
    global conn
    if conn is None: conn = DB.Connect()
    return conn.cursor()

def run(journos):
    cur = new_cursor()
    if journos:
        holes = ','.join(['%s' for j in journos])
        cur.execute('SELECT journo_ref FROM journo_bio '
                    'WHERE journo_ref IN (%s)' % holes, journos)
        refs = [ref for ref, in cur.fetchall()]
        for journo in journos:
            if journo not in refs:
                print 'warning: no such journalist "%s"' % journo
        cur.execute('SELECT id, journo_ref, bio FROM journo_bio '
                    'WHERE journo_ref IN (%s)' % holes, journos)
    else:
        cur.execute('SELECT id, journo_ref, bio FROM journo_bio '
                    'WHERE NOT approved')
    rows = cur.fetchall()
    for id, journo_ref, bio in rows:
        print journo_ref
        print '\n    %s\n' % textwrap.fill(bio).replace('\n', '\n    ')
        got = ''
        while got not in ('y', 'Y', 'n', 'N'):
            got = raw_input('Approve? [y/n] ')
        if got in ('y', 'Y'):
            cur.execute('UPDATE journo_bio SET approved=true WHERE id=%s', [id])
            cur.execute('COMMIT')  # needed to avoid rollback on ctrl-c

if __name__=='__main__':
    args = sys.argv[1:]
    journos = []
    for arg in list(args):
        if re.match(r'[a-z]+[a-z\-]+$', arg):
            journos.append(arg)
            args.remove(arg)
    if args:
        sys.exit('unknown argument: %s\n' % args[0] +
                 'usage: python approve-bios\n' + __doc__.strip())
    else:
        run(journos)
