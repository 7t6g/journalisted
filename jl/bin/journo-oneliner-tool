#!/usr/bin/env python2.4
#
# (oneliners are short description for journos, mainly to be
# displayed after their name in lists)

# Rebuild journo oneliner column, by using the newspapers
# the journo has written for to generate a short description.
# eg ("The Times, BBC News")
#

import sys
import site
site.addsitedir("../pylib")
from JL import DB,ukmedia



def run():
    conn = DB.Connect()
    c = conn.cursor()
    c.execute( "SELECT id,prettyname FROM journo" );

    journos = c.fetchall()
    for j in journos:
        desc = BuildOneLiner( conn, j['id'] )
        desc = desc.encode( 'utf-8' )
        c.execute( """BEGIN""" )
        c.execute( """UPDATE journo SET oneliner=%s WHERE id=%s""", desc, j['id'] )
        c.execute( """COMMIT""" )
        ukmedia.DBUG( u"%s: %s\n" % ( j['prettyname'].decode('utf-8'), desc.decode('utf-8') ) )

def BuildOneLiner( conn, journo_id ):
    """ returns a unicode string listing all the outlets a journo has articles for """
    c = conn.cursor()
    c.execute( """SELECT DISTINCT o.prettyname
        FROM (( article a INNER JOIN organisation o ON o.id=a.srcorg )
            INNER JOIN journo_attr attr ON attr.article_id=a.id )
        WHERE a.status='a' AND attr.journo_id=%s""", journo_id )
    desc = u', '.join( row[0].decode('utf-8') for row in c.fetchall() )
    c.close()
    return desc


if __name__ == "__main__":
    if '--help' in sys.argv or '-h' in sys.argv:
        sys.exit(
            """usage: journo-oneliner-tool\n""" +
            """  builds default oneliner descriptions for journos, based on the\n""" +
            """  outlets they've written articles for.""")
    run()

